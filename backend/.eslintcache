[{"/Users/anish/Desktop/Kanban/backend/controllers/order.js":"1","/Users/anish/Desktop/Kanban/backend/controllers/payment.js":"2","/Users/anish/Desktop/Kanban/backend/controllers/product.js":"3","/Users/anish/Desktop/Kanban/backend/controllers/user.js":"4","/Users/anish/Desktop/Kanban/backend/db.js":"5","/Users/anish/Desktop/Kanban/backend/generateToken.js":"6","/Users/anish/Desktop/Kanban/backend/middleware/auth.js":"7","/Users/anish/Desktop/Kanban/backend/middleware/error.js":"8","/Users/anish/Desktop/Kanban/backend/models/order.js":"9","/Users/anish/Desktop/Kanban/backend/models/recipe.js":"10","/Users/anish/Desktop/Kanban/backend/models/user.js":"11","/Users/anish/Desktop/Kanban/backend/routes/order.js":"12","/Users/anish/Desktop/Kanban/backend/routes/payment.js":"13","/Users/anish/Desktop/Kanban/backend/routes/product.js":"14","/Users/anish/Desktop/Kanban/backend/routes/upload.js":"15","/Users/anish/Desktop/Kanban/backend/routes/user.js":"16","/Users/anish/Desktop/Kanban/backend/server.js":"17","/Users/anish/Desktop/Kanban/backend/utils/generateToken.js":"18"},{"size":2618,"mtime":1634496826723,"results":"19","hashOfConfig":"20"},{"size":1196,"mtime":1634497211496,"results":"21","hashOfConfig":"20"},{"size":3703,"mtime":1634496867998,"results":"22","hashOfConfig":"20"},{"size":4326,"mtime":1634497232104,"results":"23","hashOfConfig":"20"},{"size":327,"mtime":1634496067378,"results":"24","hashOfConfig":"20"},{"size":216,"mtime":1634496067386,"results":"25","hashOfConfig":"20"},{"size":997,"mtime":1634497279614,"results":"26","hashOfConfig":"20"},{"size":433,"mtime":1634496067414,"results":"27","hashOfConfig":"20"},{"size":1687,"mtime":1634496067431,"results":"28","hashOfConfig":"20"},{"size":1261,"mtime":1634496067447,"results":"29","hashOfConfig":"20"},{"size":965,"mtime":1634496067462,"results":"30","hashOfConfig":"20"},{"size":623,"mtime":1634496801166,"results":"31","hashOfConfig":"20"},{"size":311,"mtime":1634497158079,"results":"32","hashOfConfig":"20"},{"size":579,"mtime":1634496789080,"results":"33","hashOfConfig":"20"},{"size":967,"mtime":1634497061912,"results":"34","hashOfConfig":"20"},{"size":748,"mtime":1634496794245,"results":"35","hashOfConfig":"20"},{"size":1365,"mtime":1634496749180,"results":"36","hashOfConfig":"20"},{"size":179,"mtime":1634495017452,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5a8iz",{"filePath":"40","messages":"41","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":1,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"80"},"/Users/anish/Desktop/Kanban/backend/controllers/order.js",[],"/Users/anish/Desktop/Kanban/backend/controllers/payment.js",["81"],"/Users/anish/Desktop/Kanban/backend/controllers/product.js",[],"/Users/anish/Desktop/Kanban/backend/controllers/user.js",["82"],"/Users/anish/Desktop/Kanban/backend/db.js",["83","84"],"import mongoose from \"mongoose\";\n\nconst connectDB = async () => {\n  try {\n    const conn = await mongoose.connect(process.env.MONGO_URI, {});\n\n    console.log(`MongoDB connected: ${conn.connection.host}`);\n  } catch (error) {\n    console.error(`Error: ${error.message}`);\n    process.exit(1);\n  }\n};\n\nexport default connectDB;\n","/Users/anish/Desktop/Kanban/backend/generateToken.js",["85"],"import jwt from \"jsonwebtoken\";\n\n// Generate a log in token using jwt\nconst generateToken = (id) => {\n  return jwt.sign({ id }, process.env.JWT_SECRET, {\n    expiresIn: \"30d\",\n  });\n};\n\nexport default generateToken;\n","/Users/anish/Desktop/Kanban/backend/middleware/auth.js",["86"],"/Users/anish/Desktop/Kanban/backend/middleware/error.js",["87"],"const notFound = (req, res, next) => {\n  const error = new Error(`Not Found - ${req.originalUrl}`);\n  res.status(404);\n  next(error);\n};\n\nconst errorHandler = (err, req, res, next) => {\n  const statusCode = res.statusCode === 200 ? 500 : res.statusCode;\n  res.status(statusCode);\n  res.json({\n    message: err.message,\n    stack: process.env.NODE_ENV === \"production\" ? null : err.stack,\n  });\n};\n\nexport { notFound, errorHandler };\n","/Users/anish/Desktop/Kanban/backend/models/order.js",[],"/Users/anish/Desktop/Kanban/backend/models/recipe.js",[],"/Users/anish/Desktop/Kanban/backend/models/user.js",["88","89","90"],"import mongoose from \"mongoose\";\nimport bcrypt from \"bcryptjs\";\n\nconst userSchema = mongoose.Schema(\n  {\n    name: {\n      type: String,\n      required: true,\n    },\n    email: {\n      type: String,\n      required: true,\n      unique: true,\n    },\n    password: {\n      type: String,\n      required: true,\n    },\n    isAdmin: {\n      type: Boolean,\n      required: true,\n      default: false,\n    },\n  },\n  {\n    timestamps: true,\n  }\n);\n\nuserSchema.methods.matchPassword = async function (plainPassword) {\n  return await bcrypt.compare(plainPassword, this.password);\n};\n\nuserSchema.pre(\"save\", async function (next) {\n  const user = this;\n\n  // Only hash the password if it has been modified (or is new)\n  if (!user.isModified(\"password\")) {\n    next();\n  }\n\n  if (user.password) {\n    const salt = await bcrypt.genSalt(10);\n    user.password = await bcrypt.hash(user.password, salt);\n  }\n});\n\nconst User = mongoose.model(\"User\", userSchema);\nexport default User;\n","/Users/anish/Desktop/Kanban/backend/routes/order.js",[],"/Users/anish/Desktop/Kanban/backend/routes/payment.js",[],"/Users/anish/Desktop/Kanban/backend/routes/product.js",[],"/Users/anish/Desktop/Kanban/backend/routes/upload.js",["91","92"],"import path from \"path\";\nimport express from \"express\";\nimport multer from \"multer\";\n\nconst router = express.Router();\n\n// Store images in disk storage\nconst storage = multer.diskStorage({\n  destination(req, file, cb) {\n    cb(null, \"uploads/\");\n  },\n  filename(req, file, cb) {\n    cb(null, `${file.fieldname}-${Date.now()}${path.extname(file.originalname)}`);\n  },\n});\n\n// Check the type of file extension\nfunction checkFileType(file, cb) {\n  const filetypes = /jpg|jpeg|png/;\n  const extname = filetypes.test(path.extname(file.originalname).toLowerCase());\n\n  const mimetype = filetypes.test(file.mimetype);\n\n  if (extname && mimetype) {\n    return cb(null, true);\n  }\n  return cb(\"Images only\");\n}\n\nconst upload = multer({\n  storage,\n  fileFilter: function (req, file, cb) {\n    checkFileType(file, cb);\n  },\n});\n\n// Upload image to express app\nrouter.post(\"/\", upload.single(\"image\"), (req, res) => {\n  res.send(`/${req.file.path}`);\n});\n\nexport default router;\n","/Users/anish/Desktop/Kanban/backend/routes/user.js",[],"/Users/anish/Desktop/Kanban/backend/server.js",["93"],"import express from \"express\";\nimport dotenv from \"dotenv\";\nimport morgan from \"morgan\";\nimport path from \"path\";\n\nimport connectDB from \"./db\";\nimport { errorHandler, notFound } from \"./middleware/error\";\n\n// Import routes\nimport productRoutes from \"./routes/product\";\nimport userRoutes from \"./routes/user\";\nimport orderRoutes from \"./routes/order\";\nimport paymentRoutes from \"./routes/payment\";\nimport uploadRoutes from \"./routes/upload\";\n\ndotenv.config();\n\nconnectDB();\n\nconst app = express();\nconst PORT = process.env.PORT || 8080;\n\napp.use(express.json());\nif (process.env.NODE_ENV === \"development\") {\n  app.use(morgan(\"dev\"));\n}\n\n// Use routes\napp.use(\"/api/products\", productRoutes);\napp.use(\"/api/users\", userRoutes);\napp.use(\"/api/orders\", orderRoutes);\napp.use(\"/api/payment\", paymentRoutes);\napp.use(\"/api/upload\", uploadRoutes);\n\n// Check if app is ready to be deployed in production mode\nif (process.env.NODE_ENV === \"production\") {\n  app.use(express.static(path.join(__dirname, \"/frontend/build\")));\n  app.get(\"*\", (req, res) =>\n    res.sendFile(path.resolve(__dirname, \"frontend\", \"build\", \"index.html\"))\n  );\n} else {\n  app.get(\"/\", (req, res) => {\n    res.send(\"API is running...\");\n  });\n}\n\napp.use(notFound);\napp.use(errorHandler);\n\napp.listen(PORT, () => {\n  console.log(`Server running in ${process.env.NODE_ENV} mode on port ${PORT}!`);\n});\n","/Users/anish/Desktop/Kanban/backend/utils/generateToken.js",["94"],"import jwt from \"jsonwebtoken\";\n\nconst generateToken = (id) => {\n  return jwt.sign({ id }, process.env.JWT_SECRET, {\n    expiresIn: \"60d\",\n  });\n};\n\nexport default generateToken;\n",{"ruleId":"95","severity":2,"message":"96","line":35,"column":7,"nodeType":"97","messageId":"98","endLine":35,"endColumn":23,"fix":"99"},{"ruleId":"100","severity":2,"message":"101","line":124,"column":29,"nodeType":"102","messageId":"103","endLine":124,"endColumn":43},{"ruleId":"104","severity":1,"message":"105","line":7,"column":5,"nodeType":"106","messageId":"107","endLine":7,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":9,"column":5,"nodeType":"106","messageId":"107","endLine":9,"endColumn":18},{"ruleId":"108","severity":2,"message":"109","line":4,"column":31,"nodeType":"110","messageId":"111","endLine":8,"endColumn":2,"fix":"112"},{"ruleId":null,"fatal":true,"severity":2,"message":"113","line":6,"column":16},{"ruleId":"114","severity":2,"message":"115","line":7,"column":38,"nodeType":"116","messageId":"117","endLine":7,"endColumn":42},{"ruleId":"118","severity":1,"message":"119","line":30,"column":36,"nodeType":"120","messageId":"121","endLine":30,"endColumn":51},{"ruleId":"122","severity":2,"message":"123","line":31,"column":10,"nodeType":"116","messageId":"124","endLine":31,"endColumn":60},{"ruleId":"118","severity":1,"message":"119","line":34,"column":24,"nodeType":"120","messageId":"121","endLine":34,"endColumn":39},{"ruleId":"118","severity":1,"message":"125","line":32,"column":3,"nodeType":"120","messageId":"121","endLine":32,"endColumn":24},{"ruleId":"95","severity":2,"message":"126","line":32,"column":3,"nodeType":"97","messageId":"127","endLine":34,"endColumn":4,"fix":"128"},{"ruleId":"104","severity":1,"message":"105","line":51,"column":3,"nodeType":"106","messageId":"107","endLine":51,"endColumn":14},{"ruleId":"108","severity":2,"message":"109","line":3,"column":31,"nodeType":"110","messageId":"111","endLine":7,"endColumn":2,"fix":"129"},"object-shorthand","Expected property shorthand.","Property","expectedPropertyShorthand",{"range":"130","text":"131"},"no-prototype-builtins","Do not access Object.prototype method 'hasOwnProperty' from target object.","CallExpression","prototypeBuildIn","no-console","Unexpected console statement.","MemberExpression","unexpected","arrow-body-style","Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.","ArrowFunctionExpression","unexpectedSingleBlock",{"range":"132","text":"133"},"Parsing error: Complex binding patterns require an initialization value","no-unused-vars","'next' is defined but never used. Allowed unused args must match /^_/u.","Identifier","unusedVar","func-names","Unexpected unnamed async function.","FunctionExpression","unnamed","no-return-await","Redundant use of `await` on a return value.","redundantUseOfAwait","Unexpected unnamed method 'fileFilter'.","Expected method shorthand.","expectedMethodShorthand",{"range":"134","text":"135"},{"range":"136","text":"137"},[877,893],"orderId",[100,183],"jwt.sign({ id }, process.env.JWT_SECRET, {\n    expiresIn: \"30d\",\n  })",[740,811],"fileFilter (req, file, cb) {\n    checkFileType(file, cb);\n  }",[63,146],"jwt.sign({ id }, process.env.JWT_SECRET, {\n    expiresIn: \"60d\",\n  })"]